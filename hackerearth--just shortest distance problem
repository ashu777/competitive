#include<bits/stdc++.h>
using namespace std;
int dis[1001];
int vis[1001];
vector<int> v[1001];
void bfs(int s,int l,int x)
{
    dis[s]=l;
    queue<int> q;
    q.push(s);
    while(!q.empty())
    {
        int p=q.front();
        q.pop();
        for(int i=0;i<v[p].size();i++)
        {
            if(p==s)
            {
                if(v[p][i]==x)
                {
                    dis[v[p][i]]=dis[p]+1;
                    q.push(v[p][i]);
                }
            }
            else
            {
                if(dis[v[p][i]]>dis[p]+1)
                {
                    dis[v[p][i]]=dis[p]+1;
                    q.push(v[p][i]);
                }
            }
        }
    }
}
int main()
{
    int n,m;
    cin>>n>>m;
    fill(dis,dis+1001,10000);
    dis[1]=0;
    while(m--)
    {
        int q,x,y;
        cin>>q;
        if(q==1)
        {
            cin>>x;
            if(dis[x]==10000)
                cout<<-1<<endl;
            else
            {
                cout<<dis[x]<<endl;
            }
        }
        else
        {
            cin>>x>>y;
            if(x!=y)
            {
            v[x].push_back(y);
            

            if(dis[x]<10000 || dis[y]<10000)
            {
                if(dis[x]>dis[y])
                {

                    bfs(y,dis[y],x);
                }
                else if(dis[y]>dis[x])
                {

                    bfs(x,dis[x],y);
                }
            }
            }
        }
    }
}
