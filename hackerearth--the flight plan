#include <bits/stdc++.h>
#define pb push_back
using namespace std;
vector<int> v[1001];
int vis[1000001];
int lvl[1000001];
int par[1000001];
int path[100001];
void bfs(int x,int y)
{
    vis[x]=1;
    queue<int> q;
    q.push(x);
    lvl[x]=1;
    par[x]=0;
    while(!q.empty())
    {
        int p=q.front();
        q.pop();
        for(int i=0;i<v[p].size();i++)
        {
            if(vis[v[p][i]]==0)
            {
                vis[v[p][i]]=1;
                lvl[v[p][i]]=lvl[p]+1;
                par[v[p][i]]=p;
                q.push(v[p][i]);
                if(v[p][i]==y)
                {
                    goto label;
                }
            }
        }
    }
    label:
        int a;
}
int main()
{
    int n,m,a,b,c,t,x,y;
    cin>>n>>m>>c>>t;
    for(int i=0;i<m;i++)
    {
        cin>>a>>b;
        v[a].pb(b);
        v[b].pb(a);
    }
    for(int i=1;i<=n;i++)
    {
        sort(v[i].begin(),v[i].end());
    }
    cin>>x>>y;
    bfs(x,y);
    cout<<lvl[y]<<"\n";
    a=y;
    b=0;
    while(a!=0)
    {
        path[b++]=a;
        a=par[a];
    }
    for(int i=b-1;i>=0;i--)
        cout<<path[i]<<" ";
    return 0;
}
